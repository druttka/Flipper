{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Flipper","body":"Flipper\r\n=======\r\n\r\nFlipper is a small library for flipping features on and off in .NET projects.\r\n\r\nIt was inspired by the rails gem rollout. https://github.com/jamesgolick/rollout\r\n\r\nIt is available via a nuget package\r\n\r\nExamples\r\n========\r\n\r\nCreate an actuator\r\n\r\n    var actuator = new Flipper.Actuator(new RedisClient());\r\n\r\nDefine a new feature\r\n\r\n\tvar feature = actuator.Get(\"feature\");\r\n\r\nAllowing a percentage of users\r\n\r\n\tactuator.ActivatePercentage(feature, 10); //Allows 10% of users to use the feature\r\n\r\nCreating a group\r\n\r\n\tactuator.DefineGroup(\"betaUsers\", new List<string> () { \"1\", \"2\", \"15\" });\r\n\r\nAssign a group to a feature\r\n\r\n\tactuator.ActivateGroup(feature, \"betaUsers\");\r\n\r\nAssign a user to a feature\r\n\r\n\tactuator.ActivateUser(feature, \"1\");\r\n\r\n\r\nCheck if a feature is active\r\n\r\n\tactuator.IsActive(feature); //this returns true only if the percentage is 100\r\n\r\n\tactuator.IsActive(feature, \"1\"); //this returns true if the user is in the percentage, users, or a group\r\n\r\n\r\nv 0.1.1\r\n=======\r\n\r\n- Renamed Flipper class to Actuator\r\n\r\nv 0.1\r\n=====\r\n\r\n- Added test coverage of basic features\r\n\r\n\r\nRoadmap\r\n=======\r\n\r\n- Document Flipper.cs and Feature.cs\r\n- Add and example project showing use\r\n- More Tests\r\n- Add extendable percentage calculating\r\n","tagline":"A library for Flipping features on and off in .NET rprojects"}